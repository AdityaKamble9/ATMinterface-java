import java.util.HashMap;
import java.util.Scanner;

public class AtmMachine {

    private static class User {
        String userId;
        String password;
        double balance;
        StringBuilder history;

        User(String userId, String password, double balance) {
            this.userId = userId;
            this.password = password;
            this.balance = balance;
            this.history = new StringBuilder();
        }
    }

    private static HashMap<String, User> users = new HashMap<>();

    static {
        users.put("8904", new User("8904", "987654321", 8000.00));
        users.put("4321", new User("4321", "324651780", 3000.00));
    }

    private static User authenticate(String userId, String password) {
        User user = users.get(userId);
        if (user != null && user.password.equals(password)) {
            return user;
        }
        return null;
    }

    private static void showMenu() {
        System.out.println("Menu:");
        System.out.println("1. Transaction history");
        System.out.println("2. Withdraw");
        System.out.println("3. Deposit");
        System.out.println("4. Transfer");
        System.out.println("5. Exit");
        System.out.println("Choose one from above:");
    }

    private static void functionalities(Scanner input, User user) {
        while (true) {
            showMenu();
            int choice = input.nextInt();
            input.nextLine();  // Consume newline
            switch (choice) {
                case 1:
                    System.out.println(user.history.toString());
                    break;
                case 2:
                    System.out.println("Enter amount to be withdrawn:");
                    double withdrawAmount = input.nextDouble();
                    if (user.balance >= withdrawAmount) {
                        user.balance -= withdrawAmount;
                        user.history.append("Rs.").append(withdrawAmount).append(" withdrawn from your account\n");
                        System.out.println("Successfully Rs." + withdrawAmount + " withdrawn from your account :) !!!");
                        System.out.println("Current balance: Rs." + user.balance);
                    } else {
                        System.out.println("Insufficient balance !!!");
                    }
                    break;
                case 3:
                    System.out.println("Enter amount to be deposited:");
                    double depositedAmount = input.nextDouble();
                    if (depositedAmount > 0) {
                        user.balance += depositedAmount;
                        user.history.append("Rs.").append(depositedAmount).append(" deposited to your account\n");
                        System.out.println("Successfully Rs." + depositedAmount + " deposited to your account :) !!!");
                        System.out.println("Current balance: Rs." + user.balance);
                    } else {
                        System.out.println("Invalid deposit amount");
                    }
                    break;
                case 4:
                    System.out.println("Enter user ID to whom you need to transfer amount:");
                    String receiverId = input.nextLine();
                    System.out.println("Enter amount:");
                    double transferAmount = input.nextDouble();
                    User receiver = users.get(receiverId);
                    if (receiver != null) {
                        if (user.balance >= transferAmount) {
                            user.balance -= transferAmount;
                            receiver.balance += transferAmount;
                            user.history.append("Rs.").append(transferAmount).append(" transferred to ").append(receiverId).append(" account\n");
                            receiver.history.append("Rs.").append(transferAmount).append(" received from ").append(user.userId).append(" account\n");
                            System.out.println("Successfully Rs." + transferAmount + " transferred from your account to " + receiverId);
                            System.out.println("Current balance: Rs." + user.balance);
                        } else {
                            System.out.println("Insufficient balance !!!");
                        }
                    } else {
                        System.out.println("Invalid receiver ID");
                    }
                    break;
                case 5:
                    return; // exit
                default:
                    System.out.println("Choose a valid option from the given menu !!!");
                    break;
            }
        }
    }

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.println("Enter user ID:");
        String enteredUserId = input.nextLine();
        System.out.println("Enter password:");
        String enteredPassword = input.nextLine();
        User user = authenticate(enteredUserId, enteredPassword);
        if (user != null) {
            functionalities(input, user);
        } else {
            System.out.println("Incorrect credentials");
        }
    }
}

